{"version":3,"sources":["MarkersMap.js","phoible.js","App.js","serviceWorker.js","index.js"],"names":["MarkerWithPopup","props","popupText","position","react_default","a","createElement","Marker","Popup","MarkersMap","markers","data","map","m","key","Map","center","zoom","TileLayer","attribution","url","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","SourceCell","href","language","inventory_id","source","toUpperCase","SourcePanel","doculect","language_name","id","glottocode","family","genus","HelpText","className","API_URL","window","location","protocol","encode","thing","encodeURIComponent","toString","replace","decode","decodeURIComponent","getHash","hash","slice","length","split","res","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","tmp","value","err","return","setHash","k","v","Object","keys","concat","join","writeHash","SearchingIcon","ErrorDialog","errTxt","test","SearchResults","SearchResult","detailFn","onClick","phonemes","Segments","segments","DetailPanel","PhonemeMatrix","name","inv","consonants","inv_id","clicks","vowels","diphthongs","PhonemeArray","syllabic_consonants","tones","notes","x","size","contents","y","i","j","openBrace","closeBrace","marginal","loan","segment","Segment","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tabIndex","hasOwnProperty","detail","state","searchResults","shouldHaveSearchResults","searchLoading","searchError","detailResults","detailError","handleChange","bind","assertThisInitialized","handleSearch","search","e","event","setState","target","preventDefault","queryURL","fetch","method","then","json","Error","error","str","_this2","searching","fetchJSON","catch","_this3","_this4","doculectRowToPopupText","row","onSubmit","type","onChange","esm","selectedIndex","onSelect","disabled","languages","forEach","latitude","longitude","values","processMapData","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15587b4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\n// fix react-leaflet markers - see https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\r\nimport L from 'leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nfunction MarkerWithPopup(props) {\r\n  const popupText = props.popupText;\r\n  const position = props.position;\r\n\r\n  if (popupText) {\r\n    return (\r\n      <Marker position={position}>\r\n        <Popup>\r\n          {popupText}\r\n        </Popup>\r\n      </Marker>\r\n    ) \r\n  }\r\n\r\n  return <Marker position={position}/>\r\n}\r\n\r\nfunction MarkersMap(props) {\r\n  const center = [0,0];\r\n  const zoom = 1;\r\n\r\n  // React won't be happy if we pass in two markers that want the same position and popup text,\r\n  // but that shouldn't happen anyway.\r\n  const markers = props.data.map(m => <MarkerWithPopup position={m.position} popupText={m.popupText} key={m.position + m.popupText} />);\r\n\r\n  return (\r\n    <LeafletMap center={center} zoom={zoom}>\r\n      <TileLayer\r\n        attribution='Thunderforest'\r\n        url='https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=7ee1e377fdd34773b610a69bd8e96e6f'\r\n      />\r\n      {markers}\r\n    </LeafletMap>\r\n  );\r\n}\r\n\r\nexport {MarkersMap};","import React from 'react';\r\n\r\nfunction SourceCell(props) {\r\n  return (\r\n    <a href={\"http://phoible.org/inventories/view\" + props.language.inventory_id}>\r\n      {props.language.source.toUpperCase()}\r\n    </a>\r\n  );\r\n}\r\n\r\nfunction SourcePanel(props) {\r\n  const doculect = props.doculect;\r\n  return (\r\n    <div>\r\n      <h3> { doculect.language_name } ({ doculect.source.toUpperCase() }) </h3>\r\n      <a href={ \"https://phoible.org/inventories/view/\" + doculect.id }>View on phoible.org</a>\r\n      <div>\r\n        Glottocode: <a href={\"https://glottolog.org/resource/languoid/id/\" + doculect.glottocode}>\r\n          {doculect.glottocode}\r\n        </a>\r\n      </div>\r\n      <div>\r\n        Family: { doculect.family || 'Isolate' } {doculect.genus ? '(' + doculect.genus + ')' : '' }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction HelpText(props) {\r\n  return (<div id='help'><h3>About</h3>\r\n\r\n                    <p>This is an unofficial search tool for <a href=\"https://phoible.org/\">PHOIBLE</a>.</p>\r\n\r\n                    <h3>Searching</h3>\r\n\r\n                    <p>A search query is minimally composed of a <em>search term</em>. There are two types of search term.</p>\r\n\r\n                    <p>A <em>phoneme term</em> consists of a phoneme enclosed in forward slashes, optionally preceded by \"no\". This will find all doculects that have (or don't have, if there's a preceding \"no\") the given phoneme.</p>\r\n\r\n                    <p>For example, <code>/t̪ʙ/</code> will return all doculects that contain the phoneme represented in PHOIBLE by the text string <code>t̪ʙ</code>, and <code>no /m/</code> will return all doculects that do not contain the phoneme represented in PHOIBLE by the text string <code>/m/</code>.</p>\r\n\r\n                    <p>A <em>feature term</em> consists of a number (optionally preceded by a <code>&lt;</code> or <code>&gt;</code> sign), a space, and a string of pluses and minuses followed (with no intervening space) by the name of the feature to search. For example, <code>2 +coronal</code> will return all doculects with exactly two [+coronal] segments, and <code>&gt;30 +syllabic</code> will return all doculects with more than thirty vowels.</p>\r\n\r\n                    <p>For the numeric component of the feature term, <code>no</code> can be used to mean <code>0</code>, and <code>any</code> can be used to mean <code>+0</code>.</p>\r\n\r\n                    <p>To search for multiple feature values on the same phoneme, separate the feature components with a semicolon. For example, <code>any +syllabic;+consonantal</code> will return a list of doculects with syllabic consonants.</p>\r\n\r\n                    <p>To ignore phonemes marked as marginal, use <code>-m</code> immediately following the search term in question. For example, <code>no /p/ -m /p/ and</code> will return all and only the doculects in which /p/ is marked as marginal.</p>\r\n\r\n                    <p>Search terms may be joined by the logical operators <code>and</code> and <code>or</code>. These are postfix.</p>\r\n\r\n                    <p>To limit the search to languages with specific properties, use <code>field:value</code>. To limit the search to languages without specific properties, use <code>!field:value</code>. Values are case-insensitive. For example, <code>country:australia</code> will return all doculects of languages that PHOIBLE lists as spoken in Australia. Spaces in the value must be replaced with underscores, as in <code>country:united_states</code>. See below for a full list of properties.</p>\r\n\r\n                    <h3>Examples</h3>\r\n\r\n                    <p className='example-text'>Find doculects with only two coronals:</p>\r\n                    <code className='example'>2 +coronal</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels:</p>\r\n                    <code className='example'>&lt;4 +syllabic</code>\r\n                    <p className='example-text'>Find doculects with three or fewer vowels or the phoneme /d/:</p>\r\n                    <code className='example'>&lt;4 +syllabic /d/ or</code>\r\n                    <p className='example-text'>Find doculects with no rounded segments:</p>\r\n                    <code className='example'>no +round</code>\r\n                    <p className='example-text'>Find doculects with /d/ and no /m/:</p>\r\n                    <code className='example'>/d/ no /m/ and</code>\r\n\r\n                    <h3>List of features</h3>\r\n                    <p>The names of PHOIBLE's features have been cconverted from camelCase to snake_case, and 'raisedLarynxEjective' and 'loweredLarynxImplosive' have been renamed to <code>ejective</code> and <code>implosive</code>.</p>\r\n                    <code><ul>\r\n                        <li>tone\r\n                        </li><li>stress\r\n                        </li><li>syllabic\r\n                        </li><li>short\r\n                        </li><li>long\r\n                        </li><li>consonantal\r\n                        </li><li>sonorant\r\n                        </li><li>continuant\r\n                        </li><li>delayed_release\r\n                        </li><li>approximant\r\n                        </li><li>tap\r\n                        </li><li>trill\r\n                        </li><li>nasal\r\n                        </li><li>lateral\r\n                        </li><li>labial\r\n                        </li><li>round\r\n                        </li><li>labiodental\r\n                        </li><li>coronal\r\n                        </li><li>anterior\r\n                        </li><li>distributed\r\n                        </li><li>strident\r\n                        </li><li>dorsal\r\n                        </li><li>high\r\n                        </li><li>low\r\n                        </li><li>front\r\n                        </li><li>back\r\n                        </li><li>tense\r\n                        </li><li>retracted_tongue_root\r\n                        </li><li>advanced_tongue_root\r\n                        </li><li>periodic_glottal_source\r\n                        </li><li>epilaryngeal_source\r\n                        </li><li>spread_glottis\r\n                        </li><li>constricted_glottis\r\n                        </li><li>fortis\r\n                        </li><li>ejective\r\n                        </li><li>implosive\r\n                        </li><li>click</li>\r\n                    </ul></code>\r\n\r\n                    <h3>List of properties</h3>\r\n                    <ul>\r\n                      <li><code>id</code>\r\n                      </li><li><code>source</code>\r\n                      </li><li><code>glottocode</code>\r\n                      </li><li><code>iso6393</code>\r\n                      </li><li><code>language_name</code>\r\n                      </li><li><code>family</code>\r\n                      </li><li><code>genus</code>\r\n                      </li><li><code>country_id</code>\r\n                      </li><li><code>country</code></li>\r\n                    </ul>\r\n                </div>)\r\n}\r\n\r\nexport { SourceCell, SourcePanel, HelpText }","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { MarkersMap } from './MarkersMap';\r\nimport './App.css';\r\n\r\nimport { SourceCell, SourcePanel, HelpText } from './phoible'\r\n\r\nconst API_URL = window.location.protocol + '//pshrimp.herokuapp.com/';\r\n\r\nfunction encode(thing) {\r\n  return encodeURIComponent(thing.toString().replace(/\\\\/g,'\\\\\\\\').replace(/&/g,'\\\\+').replace(/=/g,'\\\\e'));\r\n}\r\nfunction decode(thing) {\r\n  return decodeURIComponent(thing.replace(/\\\\\\\\/g,'\\\\').replace(/\\\\\\+/g,'&').replace(/\\\\e/g,'='));\r\n}\r\n\r\n// URL handling functions from Psmith\r\nfunction getHash() { // could cache this but eh\r\n  var hash = window.location.hash;\r\n  if (hash === '') return null;\r\n  hash = hash.slice(1, window.location.hash.length); // discard initial #\r\n\r\n  hash = hash.split('&');\r\n\r\n  var res = {};\r\n  for (let el of hash) {\r\n    let tmp = el.split('=');\r\n    if (tmp.length < 2) continue;\r\n    res[decode(tmp[0])] = decode(tmp[1]);\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction setHash(k, v) {\r\n  var hash = getHash();\r\n\r\n  if (hash === null) hash = {};\r\n  hash[k] = v;\r\n  writeHash(hash);\r\n}\r\n\r\nfunction writeHash(hash) {\r\n  var res = Object.keys(hash).map(k => `${encode(k)}=${encode(hash[k])}`);\r\n  window.location.hash = res.join('&');\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // If the hash points to a detail panel, we need to hide the help panel,\r\n    // to avoid flashing the help text as the detail query loads.\r\n    // We do this by displaying hidden fourth TabPanel that contains nothing.\r\n    var tabIndex = 0;\r\n    const hash = getHash();\r\n    if (hash && hash.hasOwnProperty('detail') && hash.detail) {\r\n      tabIndex = 4;\r\n    }\r\n\r\n    this.state = {\r\n      value: '', \r\n      searchResults: [], \r\n      shouldHaveSearchResults: false, // don't display 'no results' on load\r\n      searchLoading: false, // display a loading dialog while a search is loading\r\n      searchError: false,\r\n      detailResults: false,\r\n      detailError: false,\r\n      tabIndex: tabIndex\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.detail = this.detail.bind(this);\r\n  }\r\n\r\n  // Pull linked searches out of the URL and send the network request.\r\n  componentDidMount() {\r\n    const hash = getHash();\r\n\r\n    try {\r\n      if (hash.search) {\r\n        this.search(hash.search);\r\n      }\r\n      if (hash.detail) {\r\n        this.detail(hash.detail);\r\n      }\r\n    } catch (e) {\r\n      window.location.hash = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSearch(event) {\r\n    event.preventDefault();\r\n    setHash('search', this.state.value);\r\n\r\n    this.search(this.state.value);\r\n  }\r\n\r\n  fetchJSON(queryURL) {\r\n    return fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => {\r\n      if (res.hasOwnProperty('error')) {\r\n        throw new Error(res.error);\r\n      } else {\r\n        return res;\r\n      }\r\n    });\r\n  }\r\n\r\n  search(str) {\r\n    const queryURL = API_URL + 'query/' + encode(str);\r\n    this.setState({searching: true});\r\n    this.fetchJSON(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => this.setState({\r\n        searchResults: res, \r\n        shouldHaveSearchResults: true,\r\n        searchError: false,\r\n        searching: false\r\n      })\r\n    ).catch(\r\n      err => this.setState({\r\n        searchResults: [],\r\n        shouldHaveSearchResults: false,\r\n        searchError: err,\r\n        searching: false\r\n      })\r\n    );\r\n  }\r\n\r\n  // We have to do the if (res.error) thing.\r\n  detail(id) {\r\n    const queryURL = API_URL + 'language/' + id;\r\n    setHash('detail', id);\r\n\r\n    fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => { // add the ID so we can use that to make keys\r\n      res.id = id;\r\n      return res\r\n    }).then(res => {\r\n      if (res.error) {\r\n        this.setState({detailResults: false, detailError: res.error, tabIndex: 1})\r\n      } else {\r\n        this.setState({detailResults: res, detailError: false, tabIndex: 1})\r\n      }\r\n    }).catch(err => this.setState({detailResults: false, detailError: err, tabIndex: 1}))\r\n  }\r\n\r\n  render () {\r\n    const doculectRowToPopupText = function (row) {\r\n      return `${row.language_name} (${row.inventory_id})`;\r\n    }\r\n    const processMapData = function (searchResults) {\r\n      var languages = {};\r\n      searchResults.forEach(function (row) {\r\n        if (languages[row.glottocode] === undefined) {\r\n          languages[row.glottocode] = {\r\n            'position':  [row.latitude || 0, row.longitude || 0]\r\n          , 'popupText': doculectRowToPopupText(row)\r\n          }\r\n        } else {\r\n          languages[row.glottocode].popupText += (', ' + doculectRowToPopupText(row));\r\n        }\r\n      });\r\n      return Object.values(languages);\r\n    }\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <div className=\"row\">\r\n          <section id=\"search\" className=\"col-sm\">\r\n            <form onSubmit={this.handleSearch}>\r\n              <div id=\"input-wrapper\">\r\n                <input id=\"in\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n              </div>\r\n              <input id=\"submit\" type=\"submit\" value=\"Search\" />\r\n              { this.state.searching ? <SearchingIcon/> : '' }\r\n            </form>\r\n            \r\n            <div id=\"res\">\r\n              <ErrorDialog err={this.state.searchError}/>\r\n              {this.state.shouldHaveSearchResults ? <SearchResults value={this.state.searchResults} detailFn={this.detail}/> : ''}\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"tabnav\" className=\"col-sm\">\r\n            <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\r\n              <TabList>\r\n                <Tab>Help</Tab>\r\n                <Tab disabled={!this.state.detailResults}>Detail</Tab>\r\n                <Tab disabled={!this.state.searchResults}>Map</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <HelpText/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                {\r\n                  this.state.detailError ? \r\n                       <ErrorDialog err={this.state.detailError}/> \r\n                    : ( this.state.detailResults ?\r\n                        <DetailPanel language={this.state.detailResults} /> \r\n                        : '' )\r\n                }\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <MarkersMap data={processMapData(this.state.searchResults)} />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nfunction SearchingIcon () {\r\n  return (\r\n    <span>Loading...</span>\r\n  )\r\n}\r\n\r\n// ----------------\r\n// -- Components --\r\n// ----------------\r\n\r\nfunction ErrorDialog(props) {\r\n  if (!props.err) return (<div></div>);\r\n  var errTxt = props.err.toString();\r\n\r\n  // make sure there's only one Error: before the text\r\n  if (!/[A-Za-z]*Error: /.test(errTxt)) errTxt = 'Error: ' + errTxt;\r\n  if (/Error: (E|e)rror:/.test(errTxt)) errTxt = 'E' + errTxt.slice(8); // replace 'error' with 'Error' - TODO should just make the backend behave\r\n  return (\r\n    <div className='error'>\r\n      {errTxt}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResults(props) {\r\n  if (props.value === false) return (<div>No results</div>);\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.value.map(language => <SearchResult key={language.inventory_id} language={language} detailFn={props.detailFn} />)}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction SearchResult(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <button className='link-button' onClick={() => props.detailFn(props.language.inventory_id)}>\r\n          {props.language.language_name}\r\n        </button>\r\n      </td>\r\n      <td className='source-cell'>\r\n        <SourceCell language={props.language} /> \r\n      </td>\r\n      <td>\r\n        {props.language.phonemes ? <Segments segments={props.language.phonemes}/> : ''}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction DetailPanel(props) {\r\n  const doculect = props.language;\r\n  return (\r\n  <div className='sticky-wrapper-wrapper'>\r\n    <div className='sticky-wrapper'>\r\n      <div className='sticky-panel'>\r\n        <div>\r\n          <SourcePanel doculect={ doculect } />\r\n        </div>\r\n        <PhonemeMatrix name='Consonants' inv={ doculect.consonants } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Clicks' inv={ doculect.clicks } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Vowels' inv={ doculect.vowels } inv_id={ doculect.id } />\r\n        <PhonemeMatrix name='Diphthongs' inv= { doculect.diphthongs } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Syllabic consonants' inv={ doculect.syllabic_consonants } inv_id={ doculect.id } />\r\n        <PhonemeArray name='Tones' inv={ doculect.tones } inv_id={ doculect.id } />\r\n        <div>\r\n          { doculect.notes ? <h4>Notes</h4> : '' }\r\n          { (doculect.notes || '').split('\\n').map(x => (<p key={x}>{x}</p>)) }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nfunction PhonemeMatrix(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  // TODO this is pretty hairy - there must be a better way!\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <table className='inventory'><tbody>\r\n      {contents.map((y, i) => \r\n        <tr key={`${props.inv_id}-${i}`}>\r\n          {y.map((x, j) => \r\n            <td key={`${props.inv_id}-${i}-${j}}`}>\r\n              <Segments segments={x} />\r\n            </td>)}\r\n        </tr>)}\r\n    </tbody></table>\r\n  </div>)\r\n}\r\n\r\nfunction PhonemeArray(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <span><Segments segments={contents} /></span>\r\n  </div>)\r\n}\r\n\r\nfunction Segments(props) {\r\n  return props.segments.map(x => Segment(x));\r\n}\r\n\r\nfunction Segment(props) {\r\n  // no good way to escape these\r\n  var openBrace  = '';\r\n  var closeBrace = '';\r\n\r\n  if (props.marginal) {\r\n    openBrace  += '(';\r\n    closeBrace += ')';\r\n  }\r\n  if (props.loan) {\r\n    openBrace  += '{';\r\n    closeBrace += '}';\r\n  }\r\n\r\n  return (\r\n    <span className='segment' key={ props.segment }>{ openBrace }{ props.segment }{ closeBrace }</span>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}