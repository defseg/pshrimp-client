{"version":3,"sources":["HelpText.js","App.js","serviceWorker.js","index.js"],"names":["HelpText","props","react_default","a","createElement","id","className","API_URL","ErrorDialog","err","errTxt","toString","test","slice","SearchResults","value","map","language","SearchResult","key","detailFn","onClick","language_name","href","source","toUpperCase","phonemes","join","DetailPanel","glottocode","PhonemeMatrix","name","inv","consonants","inv_id","clicks","vowels","diphthongs","PhonemeArray","syllabic_consonants","tones","size","contents","y","i","concat","x","j","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchResults","shouldHaveSearchResults","searchError","detailResults","detailError","tabIndex","handleChange","bind","assertThisInitialized","handleSearch","detail","event","setState","target","preventDefault","search","queryURL","fetch","method","then","res","json","hasOwnProperty","Error","error","str","_this2","encodeURIComponent","replace","fetchJSON","catch","_this3","_this4","onSubmit","type","onChange","esm","selectedIndex","onSelect","disabled","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc8f6d2a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction HelpText(props) {\r\n\treturn (<div id='help'><h3>About</h3>\r\n\r\n                    <p>This is an unofficial search frontend for PHOIBLE.</p>\r\n\r\n                    <h3>Searching</h3>\r\n\r\n                    <p>A search query is minimally composed of a <em>search term</em>. There are two types of search term.</p>\r\n\r\n                    <p>A <em>phoneme term</em> consists of a phoneme enclosed in forward slashes, optionally preceded by \"no\". This will find all doculects that have (or don't have, if there's a preceding \"no\") the given phoneme.</p>\r\n\r\n                    <p>For example, <code>/t̪ʙ/</code> will return all doculects that contain the phoneme represented in PHOIBLE by the text string <code>t̪ʙ</code>, and <code>no /m/</code> will return all doculects that do not contain the phoneme represented in PHOIBLE by the text string <code>/m/</code>.</p>\r\n\r\n                    <p>A <em>feature term</em> consists of a number (optionally preceded by a <code>&lt;</code> or <code>&gt;</code> sign), a space, and a string of pluses and minuses followed (with no intervening space) by the name of the feature to search. For example, <code>2 +coronal</code> will return all doculects with exactly two [+coronal] segments, and <code>&gt;30 +syllabic</code> will return all doculects with more than thirty vowels.</p>\r\n\r\n                    <p>For the numeric component of the feature term, <code>no</code> can be used to mean <code>0</code>, and <code>any</code> can be used to mean <code>+0</code>.</p>\r\n\r\n                    <p>To search for multiple feature values on the same phoneme, separate the feature components with a semicolon. For example, <code>any +syllabic;+consonantal</code> will return a list of doculects with syllabic consonants.</p>\r\n\r\n                    <p>Search terms may be joined by the logical operators <code>and</code> and <code>or</code>. These are postfix.</p>\r\n\r\n                    <h3>Examples</h3>\r\n\r\n                    <p className='example-text'>Find doculects with only two coronal consonants:</p>\r\n                    <code className='example'>2 +coronal<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;HAWAIIAN<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;PIRAHA<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;ROTOKAS<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Pirahã</code>\r\n                    <p className='example-text'>Find doculects with two or fewer vowels:</p>\r\n                    <code className='example'>&lt;3 +syllabic<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;zulgo<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Cuvok<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Buwal</code>\r\n                    <p className='example-text'>Find doculects with two or fewer vowels or the phoneme /ʰd/:</p>\r\n                    <code className='example'>&lt;3 +syllabic /ʰd/ or<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;zulgo<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Cuvok<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Buwal<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Günün Yajich<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Hoti</code>\r\n                    <p className='example-text'>Find doculects with no rounded segments:</p>\r\n                    <code className='example'>no +round<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Oneida<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;NIMBORAN<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Gu'de</code>\r\n                    <p className='example-text'>Find doculects with /ʰd/ and no /m/:</p>\r\n                    <code className='example'>/ʰd/ no /m/ and<br/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;Hoti</code>\r\n\r\n                    <h3>List of features</h3>\r\n                    <p>These are taken directly from PHOIBLE's featural decomposition, except the names of the features have been converted from camelCase to snake_case and 'raisedLarynxEjective' and 'loweredLarynxImplosive' have been renamed to <code>ejective</code> and <code>implosive</code>.</p><code>\r\n                    <ul>\r\n                        <li>tone\r\n                        </li><li>stress\r\n                        </li><li>syllabic\r\n                        </li><li>short\r\n                        </li><li>long\r\n                        </li><li>consonantal\r\n                        </li><li>sonorant\r\n                        </li><li>continuant\r\n                        </li><li>delayed_release\r\n                        </li><li>approximant\r\n                        </li><li>tap\r\n                        </li><li>trill\r\n                        </li><li>nasal\r\n                        </li><li>lateral\r\n                        </li><li>labial\r\n                        </li><li>round\r\n                        </li><li>labiodental\r\n                        </li><li>coronal\r\n                        </li><li>anterior\r\n                        </li><li>distributed\r\n                        </li><li>strident\r\n                        </li><li>dorsal\r\n                        </li><li>high\r\n                        </li><li>low\r\n                        </li><li>front\r\n                        </li><li>back\r\n                        </li><li>tense\r\n                        </li><li>retracted_tongue_root\r\n                        </li><li>advanced_tongue_root\r\n                        </li><li>periodic_glottal_source\r\n                        </li><li>epilaryngeal_source\r\n                        </li><li>spread_glottis\r\n                        </li><li>constricted_glottis\r\n                        </li><li>fortis\r\n                        </li><li>ejective\r\n                        </li><li>implosive\r\n                        </li><li>click</li>\r\n                    </ul></code>\r\n                </div>)\r\n}\r\n\r\nexport {HelpText};","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { HelpText } from './HelpText';\r\n// import { MarkersMap } from './MarkersMap';\r\nimport './App.css';\r\n\r\nconst API_URL = 'http://pshrimp.herokuapp.com/';\r\n\r\nfunction encode(thing) {\r\n  return encodeURIComponent(thing.replace(/\\\\/g,'\\\\\\\\').replace(/&/g,'\\\\+').replace(/=/g,'\\\\e'));\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '', \r\n      searchResults: [], \r\n      shouldHaveSearchResults: false, // don't display 'no results' on load\r\n      searchError: false,\r\n      detailResults: false,\r\n      detailError: false,\r\n      tabIndex: 0\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.detail = this.detail.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSearch(event) {\r\n    event.preventDefault();\r\n\r\n    this.search(this.state.value);\r\n  }\r\n\r\n  fetchJSON(queryURL) {\r\n    return fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => {\r\n      if (res.hasOwnProperty('error')) {\r\n        throw new Error(res.error);\r\n      } else {\r\n        return res;\r\n      }\r\n    });\r\n  }\r\n\r\n  search(str) {\r\n    const queryURL = API_URL + 'query/' + encode(str);\r\n    this.fetchJSON(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => this.setState({\r\n        searchResults: res, \r\n        shouldHaveSearchResults: true,\r\n        searchError: false\r\n      })\r\n    ).catch(\r\n      err => this.setState({\r\n        searchResults: [],\r\n        shouldHaveSearchResults: false,\r\n        searchError: err\r\n      })\r\n    );\r\n  }\r\n\r\n  detail(id) {\r\n    const queryURL = API_URL + 'language/' + id;\r\n\r\n    fetch(queryURL, {\r\n      method: \"GET\"\r\n    }).then(\r\n      res => res.json()\r\n    ).then(res => { // add the ID so we can use that to make keys\r\n      res.id = id;\r\n      return res\r\n    }).then(\r\n      res => this.setState({detailResults: res, detailError: false, tabIndex: 1})\r\n    ).catch(\r\n      err => this.setState({detailResults: false, detailError: err, tabIndex: 1})\r\n    );\r\n  }\r\n\r\n  render () {\r\n    // const markersMapDataFn = function (d) {\r\n    //   return {'position': [d.latitude || 0, d.longitude || 0], 'popupText': `${d.language_name} (${d.source})`}\r\n    // }\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <div className=\"row\">\r\n          <section id=\"search\" className=\"col-sm\">\r\n            <form onSubmit={this.handleSearch}>\r\n              <div id=\"input-wrapper\">\r\n                <input id=\"in\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n              </div>\r\n              <input id=\"submit\" type=\"submit\" value=\"Search\" />\r\n            </form>\r\n            \r\n            <div id=\"res\">\r\n              <ErrorDialog err={this.state.searchError}/>\r\n              {this.state.shouldHaveSearchResults ? <SearchResults value={this.state.searchResults} detailFn={this.detail}/> : ''}\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"tabnav\" className=\"col-sm\">\r\n            <Tabs selectedIndex={this.state.tabIndex} onSelect={tabIndex => this.setState({ tabIndex })}>\r\n              <TabList>\r\n                <Tab>Help</Tab>\r\n                <Tab disabled={!this.state.detailResults}>Detail</Tab>\r\n                \r\n              </TabList>\r\n              <TabPanel>\r\n                <HelpText/>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                {\r\n                  this.state.detailError ? <ErrorDialog err={this.state.detailError}/> \r\n                    : <DetailPanel language={this.state.detailResults} /> \r\n                }\r\n              </TabPanel>\r\n              \r\n            </Tabs>\r\n          </section>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ErrorDialog(props) {\r\n  if (!props.err) return (<div></div>);\r\n  var errTxt = props.err.toString();\r\n\r\n  // make sure there's only one Error: before the text\r\n  if (!/[A-Za-z]*Error: /.test(errTxt)) errTxt = 'Error: ' + errTxt;\r\n  if (/Error: Error:/.test(errTxt)) errTxt = errTxt.slice(7);\r\n  return (\r\n    <div className='error'>\r\n      {errTxt}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SearchResults(props) {\r\n  if (props.value == false) return (<div>No results</div>);\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {props.value.map(language => <SearchResult key={language.id} language={language} detailFn={props.detailFn} />)}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction SearchResult(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <button className='link-button' onClick={() => props.detailFn(props.language.id)}>\r\n          {props.language.language_name}\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <a href={\"http://phoible.org/inventories/view/\" + props.language.id}>\r\n          {props.language.source.toUpperCase()}\r\n        </a>  \r\n      </td>\r\n      <td>\r\n        {props.language.phonemes ? props.language.phonemes.join(' ') : ''}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction DetailPanel(props) {\r\n  const language = props.language;\r\n  return (<div>\r\n    <div>\r\n      <h3>{ language.language_name } ({ language.source.toUpperCase() })</h3>\r\n      <a href={ \"https://phoible.org/inventories/view/\" + language.id }>View on phoible.org</a>\r\n      <div>Glottocode: <a href={\"https://glottolog.org/resource/languoid/id/\" + props.language.glottocode}>\r\n          {props.language.glottocode}\r\n        </a></div>\r\n    </div>\r\n    <PhonemeMatrix name='Consonants' inv={ language.consonants } inv_id={ language.id } />\r\n    <PhonemeMatrix name='Clicks' inv={ language.clicks } inv_id={ language.id } />\r\n    <PhonemeMatrix name='Vowels' inv={ language.vowels } inv_id={ language.id } />\r\n    <PhonemeMatrix name='Diphthongs' inv= { language.diphthongs } inv_id={ language.id } />\r\n    <PhonemeArray name='Syllabic consonants' inv={ language.syllabic_consonants } inv_id={ language.id } />\r\n    <PhonemeArray name='Tones' inv={ language.tones } inv_id={ language.id } />\r\n  </div>);\r\n}\r\n\r\nfunction PhonemeMatrix(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  // TODO this is pretty hairy - there must be a better way!\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <table className='inventory'><tbody>\r\n      {contents.map((y, i) => \r\n        <tr key={`${props.inv_id}-${i}`}>\r\n          {y.map((x, j) => \r\n            <td key={`${props.inv_id}-${i}-${j}}`}>\r\n              { x.join(' ') }\r\n            </td>)}\r\n        </tr>)}\r\n    </tbody></table>\r\n  </div>)\r\n}\r\n\r\nfunction PhonemeArray(props) {\r\n  const size = props.inv.size;\r\n  if (size === 0) return (<div></div>);\r\n  const contents = props.inv.contents;\r\n\r\n  return (<div>\r\n    <h4 className='language-segments'>{ props.name } ({ size })</h4>\r\n    <span>{ contents.join(' ') }</span>\r\n  </div>)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}